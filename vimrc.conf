" an awesome colour scheme by Todd Werth: http://blog.toddwerth.com/entries/8
set t_Co=256                   " enable 256 colour mode on systems that need this set
colorscheme ir_black

syntax on                      " turn on syntax colouring for various languages

set nocompatible               " compatibility mode with traditional (and inferior) vi is for crazy people!

set encoding=utf-8

set autoread                   " reload files that have changed from the outside

autocmd FileChangedShell *
	\ echohl WarningMsg |
	\ echo "File has been changed outside of vim." |
	\ echohl None


"-------------- Indents and tabs

set tabstop=4                  " four is the best number ever (especially when combined with 2)
set shiftwidth=4               " spaces for each step of (auto)indent
"set autoindent                 " maintain the current indentation when going to a new line
set noexpandtab                " never expand tabs. tabs ftw.
set shiftround                 " always round indents to multiples of shiftindent
set copyindent                 " use existing indents for new indents (?)
set preserveindent             " save as much indent structure as possible
filetype plugin indent on      " load filetype plugins and indent settings (haml needs spaces, for example)

set formatoptions=qrn1
"set colorcolumn=+1



"--------------- Console UI and text display

set ls=2                       " turn on the status line
set title                      " sets the title of the terminal window
set ruler                      " a nice ruler
set number                     " line numbers? yes, please
set cul                        " hightlight the current line
set incsearch                  " live searching ftw!

"-------------- Status line
augroup ft_statuslinecolor
	au!
	au InsertEnter * hi StatusLine ctermfg=212 guifg=#FF3145
	au InsertLeave * hi StatusLine ctermfg=245 guifg=#CD5907
augroup END

set statusline=%f    " Path.
set statusline+=%m   " Modified flag.
set statusline+=%r   " Readonly flag.
set statusline+=%w   " Preview window flag.

set statusline+=\    " Space.

set statusline+=%#redbar#                " Highlight the following as a warning.
"set statusline+=%{SyntasticStatuslineFlag()} " Syntastic errors.
set statusline+=%*                           " Reset highlighting.

set statusline+=%=   " Right align.

" File format, encoding and type.  Ex: "(unix/utf-8/python)"
set statusline+=(
set statusline+=%{&ff}                        " Format (unix/DOS).
set statusline+=/
set statusline+=%{strlen(&fenc)?&fenc:&enc}   " Encoding (utf-8).
set statusline+=/
set statusline+=%{&ft}                        " Type (python).
set statusline+=)

" Line and column position and counts.
set statusline+=\ (line\ %l\/%L,\ col\ %03c)

"-------------- Short-cut keys, etc.

" - make window smaller, + make window bigger, ` next window
map - <C-W>-
map + <C-W>+
map ` <C-W>w
"nmap <silent> \ :NERDTreeToggle<CR>
let mapleader = ","
nmap <Leader>, :NERDTreeToggle<CR>
nnoremap <F1> :set invnumber number?<CR>
nnoremap <leader>ev :split $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

"-------------- NERDtree
let NERDTreeDirArrows=1
let NERDTreeMinimalUI=1

"-------------- Disabled, example, and experimental stuff

" set term=ansi

"source $HOME/Documents/dot-files/vim/ir_black.vim
" set t_Co=256
"function StripTrailingWhitespace()
"	:%s/\s\+$//
"	echo "Trailing white space stripped."
"endfunction

"command Stripwp :call StripTrailingWhitespace()
nnoremap n nzzzv:call PulseCursorLine()<cr>
nnoremap N Nzzzv:call PulseCursorLine()<cr>

function! PulseCursorLine()
    let current_window = winnr()

    windo set nocursorline
    execute current_window . 'wincmd w'

    setlocal cursorline

    redir => old_hi
        silent execute 'hi CursorLine'
    redir END
    let old_hi = split(old_hi, '\n')[0]
    let old_hi = substitute(old_hi, 'xxx', '', '')

    hi CursorLine guibg=#2a2a2a ctermbg=233
    redraw
    sleep 40m

    hi CursorLine guibg=#333333 ctermbg=235
    redraw
    sleep 40m

    hi CursorLine guibg=#3a3a3a ctermbg=237
    redraw
    sleep 40m

    hi CursorLine guibg=#444444 ctermbg=239
    redraw
    sleep 40m

    hi CursorLine guibg=#3a3a3a ctermbg=237
    redraw
    sleep 40m

    hi CursorLine guibg=#333333 ctermbg=235
    redraw
    sleep 40m

    hi CursorLine guibg=#2a2a2a ctermbg=233
    redraw
    sleep 40m

    execute 'hi ' . old_hi

    windo set cursorline
    execute current_window . 'wincmd w'
endfunction

